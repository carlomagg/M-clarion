M-CLARION DEPLOYMENT INSTRUCTIONS
================================

Environment Setup
----------------
1. Development Environment (.env.development):
   VITE_API_URL=http://212.227.239.99:8000/
   VITE_ACCESS_TOKEN_NAME=access
   VITE_REFRESH_TOKEN_NAME=refresh
   VITE_PERMISSIONS_DECRYPTION_KEY=cMsfPPrugCXvoP9/LOzwyQ==

2. Production Environment (.env.production):
   VITE_API_URL=https://mclarion.com.ng/
   VITE_ACCESS_TOKEN_NAME=access
   VITE_REFRESH_TOKEN_NAME=refresh
   VITE_PERMISSIONS_DECRYPTION_KEY=cMsfPPrugCXvoP9/LOzwyQ==

Package.json Scripts
-------------------
{
  "scripts": {
    "dev": "vite --mode development",
    "build": "vite build --mode production",
    "preview": "vite preview"
  }
}

Vercel Deployment Steps
----------------------
1. Environment Variables Setup:
   - Go to Vercel Dashboard
   - Select your project
   - Go to Settings > Environment Variables
   - Add the following variables:
     VITE_API_URL=https://mclarion.com.ng/
     VITE_ACCESS_TOKEN_NAME=access
     VITE_REFRESH_TOKEN_NAME=refresh
     VITE_PERMISSIONS_DECRYPTION_KEY=cMsfPPrugCXvoP9/LOzwyQ==

2. Deployment:
   - Push your code to your repository
   - Vercel will automatically detect changes and deploy
   - Or manually trigger deployment from Vercel dashboard

3. Post-Deployment Checks:
   - Clear browser cache
   - Open browser dev tools (F12)
   - Go to Network tab
   - Verify all API requests go to https://mclarion.com.ng/
   - Check for any CORS errors
   - Verify media/image URLs are loading correctly

Local Testing Before Deployment
------------------------------
1. Build for production:
   npm run build

2. Preview production build:
   npm run preview

3. Check in browser:
   - Open http://localhost:4173 (or whatever port Vite shows)
   - Open Dev Tools (F12)
   - Go to Network tab
   - Verify API URLs are correct
   - Test all main functionalities

Troubleshooting
--------------
1. If seeing wrong API URLs:
   - Clear browser cache
   - Check Vercel environment variables
   - Verify .env.production is being used
   - Rebuild and redeploy

2. If media/images not loading:
   - Check Network tab for 404 errors
   - Verify media URLs include BASE_API_URL
   - Check CORS settings on backend

3. If getting CORS errors:
   - Verify backend CORS configuration allows Vercel domain
   - Check for mixed content (http/https) issues
   - Verify SSL certificates are valid

Important Notes
--------------
1. Always use relative paths in axios requests
2. Use BASE_API_URL for media/image URLs
3. Keep development and production environments separate
4. Test thoroughly in preview before deploying
5. Monitor network requests in production
6. Keep these instructions updated as configurations change 